name: Deploy Services

on:
  push:
    branches:
      - "master"

jobs:
  deploy:
    environment: "production"
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt-get -y update
          sudo apt-get install -y ansible cloudflared

      - name: Install Ansible roles
        run: ansible-galaxy install fubarhouse.golang

      - name: Setup cloudflared
        run: |
          mkdir -p ~/.cloudflared;
          mkdir -p ~/.ssh;

          touch ~/.cloudflared/cert.pem;
          echo "${{ secrets.CF_TUNNEL_CERT }}" >> ~/.cloudflared/cert.pem;
          echo "" >> ~/.cloudflared/cert.pem;

          touch ~/.cloudflared/cert.pem;
          echo "${{ secrets.CF_TUNNEL_TOKEN }}" >> ~/.cloudflared/home-server-tunnel.json;
          echo "" >> ~/.cloudflared/home-server-tunnel.json;

          touch ~/.ssh/config;
          echo "Host server
          HostName ${{ secrets.SERVER_HOSTNAME }}
          ProxyCommand cloudflared access ssh --hostname %h
          User sarthakjdev" >> ~/.ssh/config;
          echo "" >> ~/.ssh/config;

          echo $?
          echo "EXIT CODE ABOVE"

      - name: Configuring VM
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          NEXTCLOUD_ADMIN_PASSWORD: ${{ secrets.NEXTCLOUD_ADMIN_PASSWORD }}
          NEXTCLOUD_ADMIN_USER: ${{ secrets.NEXTCLOUD_ADMIN_USER }}
          NEXTCLOUD_PG_PASSWORD: ${{ secrets.NEXTCLOUD_PG_PASSWORD }}
          NEXTCLOUD_PG_USER: ${{ secrets.NEXTCLOUD_PG_USER }}
          NEXTCLOUD_PG_DB: ${{ secrets.NEXTCLOUD_PG_DB }}
          CF_SSL_CERT: ${{ secrets.CF_SSL_CERT }}
          CF_SSL_CERT_KEY: ${{ secrets.CF_SSL_CERT_KEY }}
          CF_TUNNEL_TOKEN: ${{ secrets.CF_TUNNEL_TOKEN }}
          CF_TUNNEL_CERT: ${{ secrets.CF_TUNNEL_CERT }}
          CF_TUNNEL_ID: ${{ secrets.CF_TUNNEL_ID }}
        run: |
          mkdir ~/.ssh;
          touch ~/.ssh/id_rsa;
          echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa;
          echo "" >> ~/.ssh/id_rsa;
          chmod 600 ~/.ssh/id_rsa;
          ansible-playbook ./deploy/ansible/configure-server.ansible.yaml -i "${{ secrets.SERVER_HOSTNAME }}," --private-key=~/.ssh/id_rsa --user=sarthakjdev --extra-vars '{"DOCKER_PASSWORD":"${{ secrets.DOCKER_PASSWORD }}"}'
          echo $?
          echo "EXIT CODE ABOVE"

      - name: Deployment Failure Alert
        if: ${{ failure() }}
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: "ðŸš¨ðŸš¨ðŸš¨ MASTER BRANCH BACKEND DEPLOYMENT FAILED ON HOME SERVER ðŸš¨ðŸš¨ðŸš¨"
          embed-description: " .<@517983211708612609> deploy job on master branch failed, check [HERE](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"

      - name: Deployment Failure Alert
        if: ${{ success() }}
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: "ðŸŸ¢ [HOME SERVER SERVICES] MASTER BRANCH DEPLOYMENT SUCCESS"
          embed-color: "#a855f7"
          embed-description: "Home server configs deployed synced!!"
